name: Trigger Azure ML Training Job

on:
  workflow_dispatch:
    inputs:
      job_id:
        description: 'Azure ML Job ID to clone and run'
        required: true

jobs:
  trigger-training-job:
    runs-on: ubuntu-latest
    environment: dev # Use development environment

    steps:
    - name: Checkout repository
      uses: actions/checkout@v2

    - name: Azure Login
      uses: azure/login@v1
      with:
        creds: ${{ secrets.AZURE_CREDENTIALS }}

    - name: Install Azure ML extension
      run: az extension add -n ml -y

    - name: Get Existing Job Configuration
      run: |
        az ml job show --name ${{ github.event.inputs.job_id }} \
                       --resource-group ${{ secrets.AZURE_RESOURCE_GROUP }} \
                       --workspace-name ${{ secrets.AZURE_ML_WORKSPACE }} > full_job_config.json

    - name: Create Job Configuration for New Training Job
      run: |
        jq '. | {command: .command, environment: .environment, inputs: .inputs, outputs: (.outputs | with_entries(if .key == "default" then .key = "renamed_output" else . end))}' full_job_config.json > job_config.yaml

    - name: Run Training Job on Azure ML
      run: |
        az ml job create --file job_config.yaml \
                         --resource-group ${{ secrets.AZURE_RESOURCE_GROUP }} \
                         --workspace-name ${{ secrets.AZURE_ML_WORKSPACE }}
      env:
        AZURE_SUBSCRIPTION_ID: ${{ secrets.AZURE_SUBSCRIPTION_ID }}
        AZURE_RESOURCE_GROUP: ${{ secrets.AZURE_RESOURCE_GROUP }}
        AZURE_ML_WORKSPACE: ${{ secrets.AZURE_ML_WORKSPACE }}

  production-job:
    needs: trigger-training-job
    runs-on: ubuntu-latest
    environment: prod # Use production environment, requires approval
    steps:
    - name: Checkout repository
      uses: actions/checkout@v2

    - name: Azure Login
      uses: azure/login@v1
      with:
        creds: ${{ secrets.AZURE_CREDENTIALS }}

    - name: Install Azure ML extension
      run: az extension add -n ml -y

    - name: Run Production Training Job
      run: |
        az ml job create --file job_config.yaml \
                         --resource-group ${{ secrets.AZURE_RESOURCE_GROUP }} \
                         --workspace-name ${{ secrets.AZURE_ML_WORKSPACE }}
      env:
        AZURE_SUBSCRIPTION_ID: ${{ secrets.AZURE_SUBSCRIPTION_ID }}
        AZURE_RESOURCE_GROUP: ${{ secrets.AZURE_RESOURCE_GROUP }}
        AZURE_ML_WORKSPACE: ${{ secrets.AZURE_ML_WORKSPACE }}
